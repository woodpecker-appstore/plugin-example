package me.gv7.woodpecker.plugin.exploits;

import me.gv7.woodpecker.plugin.*;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class Exploit implements IExploit {
    @Override
    public String getExploitTabCaption() {
        return "woodpecker exploit标签栏中的名称";
    }

    @Override
    public IArgsUsageBinder getExploitCustomArgs() {
        // Exploit 参数，这里示范添加一个cmd参数
        List<IArg> args = new ArrayList<>();
        final IArg cmd = VulPluginInfo.pluginHelper.createArg();
        cmd.setName("cmd");
        cmd.setDefaultValue("whoami");
        cmd.setDescription("想执行的命令");
        cmd.setRequired(true);
        cmd.setType(IArg.ARG_TYPE_STRING);

        IArgsUsageBinder binder = VulPluginInfo.pluginHelper.createArgsUsageBinder();
        binder.setArgsList(args);
        binder.setUsage("编写参数的使用方法");
        return binder;
    }

    @Override
    public void doExploit(ITarget target, Map<String, Object> customArgs, IResultOutput result) throws Throwable {
        String addr = target.getAddress();
        // 从20行设置的参数cmd中取出
        String cmd = (String) customArgs.get("cmd");

        // 做出漏洞利用之后返回
        result.successPrintln("success!");
    }
}
